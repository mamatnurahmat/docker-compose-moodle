{"version":3,"file":"course_progress.min.js","sources":["../src/course_progress.js"],"sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-dupe-keys */\n/* eslint-disable camelcase */\n/* eslint-disable max-len */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-empty-function */\n/* eslint-disable promise/catch-or-return */\n/* eslint-disable promise/always-return */\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/modal_save_cancel',\n    'block_remuiblck/dataTables.bootstrap4',\n    'block_remuiblck/jquery-asPieProgress',\n    'block_remuiblck/aspieprogress'\n], function(\n    $,\n    Ajax,\n    Notification,\n    Templates,\n    ModalFactory,\n    ModalEvents\n) {\n    var SELECTORS = {\n        ROOT: '',\n        TABLE: '#DataTables_Teacher',\n        DATA_TABLE: '#DataTables_Teacher_wrapper',\n        STUDENT_PROGRESS_ELEMENT: '.student_progress_ele',\n        STUDENT_PROGRESS_TABLE: '#wdmCourseProgressTable',\n        COURSE_NAME: '.wdm_course_name.has-student',\n        MESSAGE_HIDDEN: '#messageidhidden',\n        MESSAGE_AREA: '#messagearea',\n        TOGGLE_DESCRIPTION: '.toggle-desc',\n        REVERT: '#courserevertbtn',\n        CUSTOM_MESSAGE: '.custom-message',\n        MESSAGE_SEND: '.send-message',\n        BLOCK_PROCESSING: '.block-processing',\n        ALWAYS_LOAD: '#always-load-progress',\n        COURSE_PROGRESSING: '.course-progress-settings',\n        LOAD_COURSE_PROGRESS: '#load-progress',\n        PANEL: '.panel',\n        PANEL_HEADING: '.panel-heading',\n        PANEL_ACTIONS: 'panel-actions',\n        BLOCK_PROCESSING: '.block-processing',\n        STUDENT_PROOGRESS_VISIBLE: 'student-progress-visible',\n        DATATABLE_HEADER: \"#datatable_header\"\n    };\n\n    // Data object to store local data\n    var DATA = {\n        coursesTable: false,\n        alwaysloadwarning: false\n    };\n    console.log('testing');\n    var PROMISES = {\n        /**\n         * Get courses using ajax\n         * @param  {String}  search Search query\n         * @param  {Number}  length Number of courses\n         * @param  {Number}  start  Start index of courses\n         * @param  {Array}   order  Sorting order\n         * @param {int} loadProgress\n         * @return {Promise}        Ajax promise\n         */\n        GET_COURSES: function(search, length, start, order, loadProgress) {\n            return Ajax.call([{\n                methodname: 'block_remuiblck_get_course_progress_list',\n                args: {\n                    search: search,\n                    length: length,\n                    start: start,\n                    order: order,\n                    loadprogress: loadProgress\n                }\n            }])[0];\n        },\n        /**\n         * Get course progress using course id and ajax\n         * @param  {Number}  courseid Course id\n         * @return {Promise}          Ajax promise\n         */\n        GET_COURSE_PROGRESS: function(courseid) {\n            return Ajax.call([{\n                methodname: 'block_remuiblck_get_course_progress',\n                args: {\n                    courseid: courseid\n                }\n            }])[0];\n        },\n        /**\n         * Send message to student using student id and ajax\n         * @param  {Number} studentid   Student id\n         * @param  {String} messagetext Message text\n         * @return {Promise}            Ajax promise\n         */\n        SEND_MESSAGE: function(studentid, messagetext) {\n            return Ajax.call([{\n                methodname: 'block_remuiblck_send_message',\n                args: {\n                    studentid: studentid,\n                    messagetext: messagetext\n                }\n            }])[0];\n        }\n    };\n\n    /**\n     * Generate teacher courses table data from ajax response\n     * @param  {Array}  courses Courses list with course details\n     * @return {Object}         Data object\n     */\n    function generate_courses_table_data(courses) {\n        var data = [];\n        courses.forEach(function(course) {\n            var dData = {};\n            dData.index = '<div class=\"w-50\" tabindex=\"0\">' + course.index + '</div>';\n            if (course.enrolledStudents > 0) {\n                dData.course = '<div class=\"wdm_course_name has-student\" data-courseid=\"' + course.id + '\"><a href=\"javascript:void(0)\">' + course.fullname + '</a></div>';\n            } else {\n                dData.course = '<div class=\"wdm_course_name\" data-courseid=\"' + course.id + '\" >' + course.fullname + '</div>';\n            }\n            dData.startdate = course.startdate;\n            dData.students = '<div class=\"w-100\"><span class=\"w-full pl-40\">' + course.enrolledStudents + '</span></div>';\n            if (course.percentage == -1) {\n                dData.progress = '';\n            } else {\n                dData.progress = '<td class=\"w-100 px-10\"><div class=\"pie-progress pie-progress-xs m-0 w-35\" data-plugin=\"pieProgress\" data-valuemax=\"50\" data-barcolor=\"#11c26d\" data-size=\"20\" data-barsize=\"3\" data-goal=\"35\" aria-valuenow=\"' + course.percentage + '\" role=\"progressbar\" style=\"max-width: 35px!important;\"><div class=\"pie-progress-content\" style=\"z-index:2;\"> </div> <span class=\" progress-percent\" style=\"margin-left: 50px;position: absolute;top: 8px;\">' + course.percentage + '%</span> </div></td>';\n            }\n            data.push(dData);\n        });\n        return data;\n    }\n\n    //* ****************\n    // This is code is for table creation on dashboard\n    // this code also toggles between course progress and student progress table\n    // Function createDatatable() creates course progress table\n    /**\n     * @param {DOM} root\n     */\n    function createDatatable(root) {\n        DATA.coursesTable = $(root).show().find(SELECTORS.TABLE).DataTable({\n            \"paging\":   true,\n            \"pagingType\": \"simple_numbers\",\n            \"autoWidth\": true,\n            \"scrollX\": true,\n            \"bPaginate\": true,\n            \"bServerSide\": true,\n            language: {\n                searchPlaceholder: M.util.get_string('searchforcourses', 'block_remuiblck'),\n                emptyTable: M.util.get_string('nomatchingcourses', 'core_backup'),\n                lengthMenu: M.util.get_string('show', 'moodle') + \" _MENU_ \" + M.util.get_string('entries', 'moodle'),\n                info: M.util.get_string('datatableinfo', 'block_remuiblck'),\n                search: M.util.get_string('search', 'block_remuiblck') + ':',\n                paginate: {\n                    // first: M.util.get_string('first', 'moodle'),\n                    // previous: M.util.get_string('previous', 'moodle'),\n                    // next: M.util.get_string('next', 'moodle'),\n                    // last: M.util.get_string('last', 'moodle')\n                    first: \"<span class='edw-icon edw-icon-Left-Arrow'></span>\",\n                    previous: \"<span class='edw-icon edw-icon-Left-Arrow'></span>\",\n                    next: \"<span class='edw-icon edw-icon-Right-Arrow'></span>\",\n                    last: \"<span class='edw-icon edw-icon-Right-Arrow'></span>\",\n                },\n            },\n            \"ajax\": function(data, callback, settings) {\n                $(root).find(SELECTORS.BLOCK_PROCESSING).addClass('show');\n                let loadCourseProgress = $(root + ' ' + SELECTORS.COURSE_PROGRESSING).is('.load-progress');\n                PROMISES.GET_COURSES(\n                    data.search.value,\n                    data.length,\n                    data.start,\n                    data.order[0],\n                    loadCourseProgress\n                ).done(function(response) {\n                    if (response.recordsTotal == 0) {\n                        response.data = [];\n                        callback(response);\n                        $(root).find(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n                        return;\n                    }\n                    response.data = generate_courses_table_data(response.courses);\n                    callback(response);\n                    $(root).find(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n                }).fail(Notification.exception);\n            },\n            columns: [\n                {data: \"index\"},\n                {data: \"course\"},\n                {data: \"startdate\"},\n                {data: \"students\", \"orderable\": false},\n                {data: \"progress\", \"orderable\": false}\n            ],\n            responsive: true,\n            drawCallback: function(settings) {\n                createPieProgress('');\n                $(DATA.coursesTable.table().header() ).addClass( 'h-semibold-6' );\n            }\n        });\n    }\n\n\n    /**\n     * Create pie progress where div with .pie-progress class is present\n     * @param {String} target\n     */\n    function createPieProgress(target) {\n        var element = $(SELECTORS.ROOT);\n        if (target != '') {\n            element = element.find(target);\n        }\n        element.find('.pie-progress').asPieProgress({\n            namespace: 'pie-progress',\n            speed: 30,\n            classes: {\n                svg: 'pie-progress-svg',\n                element: 'pie-progress',\n                number: 'pie-progress-number',\n                content: 'pie-progress-content'\n            }\n        });\n    }\n\n    var courseProgressTable;\n    /**\n     * Fetch students course progress data using ajax and display in table format\n     * @param  {int} courseid Course id\n     */\n    function getCourseProgressData(courseid) {\n        $(SELECTORS.ROOT).find(SELECTORS.BLOCK_PROCESSING).addClass('show');\n        PROMISES.GET_COURSE_PROGRESS(courseid).done(function(response) {\n            Templates.render('block_remuiblck/course_progress_view', response)\n            .done(function(html, js) {\n                $(SELECTORS.ROOT).find(SELECTORS.DATA_TABLE).hide();\n                Templates.replaceNodeContents($(SELECTORS.ROOT).find(SELECTORS.STUDENT_PROGRESS_ELEMENT), html, js);\n                createPieProgress(SELECTORS.STUDENT_PROGRESS_ELEMENT);\n                courseProgressTable = $(SELECTORS.ROOT).find(SELECTORS.STUDENT_PROGRESS_TABLE).DataTable({\n                    \"scrollY\":        \"300px\",\n                    \"scrollCollapse\": true,\n                    \"paging\": false,\n                    \"retrieve\": true,\n                    \"lengthchange\": false,\n                    \"autoWidth\": true,\n                    \"scrollX\": true,\n                    \"search\": \"Fred\",\n                    \"info\": false,\n                    language: {\n                        searchPlaceholder: \"Search\"\n                    },\n                    responsive: true,\n                });\n\n                $(SELECTORS.ROOT).find('div.dataTables_filter input').addClass('form-control');\n                $(SELECTORS.ROOT).find('div.dataTables_length select').addClass('form-control');\n\n                $(SELECTORS.ROOT).addClass(SELECTORS.STUDENT_PROOGRESS_VISIBLE);\n                $(SELECTORS.ROOT).find(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n\n                $('html, body').animate({\n                    scrollTop: $(SELECTORS.ROOT).offset().top - 120\n                }, 300);\n            })\n            .fail(function() {\n            });\n        }).fail(function() {\n            $(SELECTORS.ROOT).find('div#analysis-chart-area').hide();\n        });\n\n    }\n\n    /**\n     * Send message to user\n     * @param  {int}    studentid Student id\n     * @param  {string} message   Text message\n     */\n    function sendMessageToUser(studentid, message) {\n        PROMISES.SEND_MESSAGE(studentid, message)\n        .done(function() {\n            clearModalFields();\n            $(SELECTORS.ROOT).find('.close-message').click();\n        })\n        .fail(function(ex) {\n            Notification.exception(ex);\n            $(SELECTORS.ROOT).find('div#analysis-chart-area').hide();\n        });\n    }\n\n    /**\n     * Clear message modal field\n     */\n    function clearModalFields() {\n        $(SELECTORS.ROOT).find(SELECTORS.MESSAGE_HIDDEN).val('');\n        $(SELECTORS.ROOT).find(SELECTORS.MESSAGE_AREA).val('');\n    }\n\n    /**\n     * Toggle always load course progress preference\n     * @param {Boolean} checked If checked course progress will be loaded always\n     */\n    function toggleAlwaysLoading(checked) {\n        M.util.set_user_preference('always-load-progress', checked);\n        $(SELECTORS.ROOT).find(SELECTORS.COURSE_PROGRESSING).toggleClass('always-loading', checked);\n        $(SELECTORS.ROOT).find(SELECTORS.COURSE_PROGRESSING).toggleClass('load-progress', checked);\n        DATA.coursesTable.draw(false);\n    }\n\n    /**\n     * Initialze events for course progress block\n     * @param  {String} root Root container id.\n     */\n    function initializeEvents(root) {\n        // Destroy the table and send ajax request\n        $('body').on('click', root + ' ' + SELECTORS.COURSE_NAME, function() {\n            var courseid = $(this).data('courseid');\n            // TeacherViewTable.destroy();\n            getCourseProgressData(courseid);\n        })\n\n        // Restore the previous table\n        .on('click', root + ' ' + SELECTORS.REVERT, function() {\n            courseProgressTable.destroy();\n            $(root).find(SELECTORS.STUDENT_PROGRESS_ELEMENT).empty();\n            $(root).find(SELECTORS.DATA_TABLE).show();\n            $(root).removeClass(SELECTORS.STUDENT_PROOGRESS_VISIBLE);\n            $('html, body').animate({\n                scrollTop: $(SELECTORS.ROOT).offset().top - 120\n            }, 300);\n        })\n\n        // This block opens modal and sends message to user\n        .on('click', root + ' ' + SELECTORS.CUSTOM_MESSAGE, function() {\n            var studentid = $(this).data('studentid');\n            $(SELECTORS.MESSAGE_HIDDEN).val(studentid);\n        })\n\n        // Send message\n        .on('click', root + ' ' + SELECTORS.MESSAGE_SEND, function() {\n            var studentid = $(root).find(SELECTORS.MESSAGE_HIDDEN).val();\n            var message = $(root).find(SELECTORS.MESSAGE_AREA).val();\n            if (message != '') {\n                sendMessageToUser(studentid, message);\n            } else {\n                $(SELECTORS.MESSAGE_AREA).focus();\n            }\n        })\n\n        // Toggle description of student progress\n        .on('click', SELECTORS.STUDENT_PROGRESS_ELEMENT + ' ' + SELECTORS.TOGGLE_DESCRIPTION, function() {\n            $(this).toggleClass('fa-plus');\n            $(this).toggleClass('fa-minus');\n            $(this).parents(SELECTORS.STUDENT_PROGRESS_ELEMENT).find('.panel-body').toggleClass('show');\n        })\n\n        // Enable course progress always loading\n        .on('change', root + ' ' + SELECTORS.ALWAYS_LOAD, function() {\n            var checkbox = $(this);\n            var checked = $(this).is(':checked');\n            if (!DATA.alwaysloadwarning && checked) {\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: M.util.get_string('alwaysload', 'block_remuiblck'),\n                    body: M.util.get_string('alwaysloadwarning', 'block_remuiblck')\n                })\n                .then(function(modal) {\n                    var modalRoot = modal.getRoot();\n                    modalRoot.on(ModalEvents.save, function() {\n                        DATA.alwaysloadwarning = true;\n                        M.util.set_user_preference('always-load-warning', true);\n                        toggleAlwaysLoading(checked);\n                        modal.destroy();\n                    });\n                    modalRoot.on(ModalEvents.cancel, function() {\n                        checkbox.prop('checked', false);\n                    });\n                    modal.show();\n                });\n            } else {\n                toggleAlwaysLoading(checked);\n            }\n        })\n\n        // Load course progress on click\n        .on('click', root + ' ' + SELECTORS.LOAD_COURSE_PROGRESS, function() {\n            $(root).find(SELECTORS.COURSE_PROGRESSING).addClass('load-progress');\n            DATA.coursesTable.draw(false);\n        });\n\n        // Teacher courses listing table order pieprogress\n        $(root + ' ' + SELECTORS.TABLE).on('order.dt', function() {\n           createPieProgress('');\n        });\n\n        // Student progress listing table order pieprogress\n        $(root + ' ' + SELECTORS.STUDENT_PROGRESS_TABLE).on('order.dt', function() {\n           createPieProgress('');\n        });\n    }\n\n    /**\n     * Move settings to panel heading\n     * @param  {string} root Root container id\n     */\n    var updateContainers = function(root) {\n        // Move add button panel heading\n        let button = $(root).find(SELECTORS.COURSE_PROGRESSING).detach();\n        let panelHeading = $(root).closest(SELECTORS.PANEL).find(SELECTORS.PANEL_HEADING);\n        let panelActions = $(panelHeading).find('.' + SELECTORS.PANEL_ACTIONS);\n        if (panelActions.length == 0) {\n            panelActions = $('<div class=\"' + SELECTORS.PANEL_ACTIONS + '\"></div>');\n            panelHeading.append(panelActions);\n        }\n        $(SELECTORS.DATATABLE_HEADER).append(button);\n        button.removeClass('d-none').addClass('d-flex');\n        // $(SELECTORS.DATATABLE_HEADER).find(\"div\").removeClass(\"col-sm-12 col-md-6\").addClass(\"search-show-filter\");\n        let taskProcessing = $(root).find(SELECTORS.BLOCK_PROCESSING).detach();\n        let panel = $(panelHeading).parent(SELECTORS.PANEL);\n        panel.prepend(taskProcessing);\n    };\n\n    /**\n     * Load task on initialisation\n     * @param {DOM}     root          block DOM object\n     * @param {Boolean} alwaysloadwarning If false then always load progress warning will be shown on enabling\n     */\n    var init = function(root, alwaysloadwarning = false) {\n        SELECTORS.ROOT = root;\n        DATA.alwaysloadwarning = alwaysloadwarning;\n        $(document).ready(function() {\n            // updateContainers(root);\n            createPieProgress('');\n            createDatatable(root);\n            updateContainers(root);\n            initializeEvents(root);\n        });\n    };\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","Ajax","Notification","Templates","ModalFactory","ModalEvents","SELECTORS","ROOT","TABLE","DATA_TABLE","STUDENT_PROGRESS_ELEMENT","STUDENT_PROGRESS_TABLE","COURSE_NAME","MESSAGE_HIDDEN","MESSAGE_AREA","TOGGLE_DESCRIPTION","REVERT","CUSTOM_MESSAGE","MESSAGE_SEND","BLOCK_PROCESSING","ALWAYS_LOAD","COURSE_PROGRESSING","LOAD_COURSE_PROGRESS","PANEL","PANEL_HEADING","PANEL_ACTIONS","STUDENT_PROOGRESS_VISIBLE","DATATABLE_HEADER","DATA","coursesTable","alwaysloadwarning","console","log","courseProgressTable","PROMISES","search","length","start","order","loadProgress","call","methodname","args","loadprogress","courseid","studentid","messagetext","createDatatable","root","show","find","DataTable","language","searchPlaceholder","M","util","get_string","emptyTable","lengthMenu","info","paginate","first","previous","next","last","data","callback","settings","addClass","loadCourseProgress","is","value","done","response","recordsTotal","removeClass","courses","forEach","course","dData","index","enrolledStudents","id","fullname","startdate","students","percentage","progress","push","generate_courses_table_data","fail","exception","columns","responsive","drawCallback","createPieProgress","table","header","target","element","asPieProgress","namespace","speed","classes","svg","number","content","sendMessageToUser","message","val","click","ex","hide","toggleAlwaysLoading","checked","set_user_preference","toggleClass","draw","initializeEvents","on","render","html","js","replaceNodeContents","animate","scrollTop","offset","top","getCourseProgressData","this","destroy","empty","focus","parents","checkbox","create","type","types","SAVE_CANCEL","title","body","then","modal","modalRoot","getRoot","save","cancel","prop","updateContainers","button","detach","panelHeading","closest","panelActions","append","taskProcessing","parent","prepend","init","document","ready"],"mappings":"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"}